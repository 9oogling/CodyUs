name: Deploy CodyUs

on:
  pull_request:
    branches:
      - main
    types:
      - closed # PR이 닫히거나 병합될 때만 실행

jobs:
  deploy:
    name: Rolling Deploy to EC2
    if: github.event.pull_request.merged == true #병합된 경우에만 실행
    runs-on: ubuntu-latest

    steps:
    # 1. Git 저장소 체크아웃
    - name: Checkout repository
      uses: actions/checkout@v3

    # 3. Java 17 설정
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'  # OpenJDK 배포판
        java-version: '17'     # Java 17로 설정

    # 4. Gradle 파일에 실행 권한 부여
    - name: execute permission for Gradlew
      run: chmod +x ./gradlew

    # 5. Gradle 빌드
    - name: Build with Gradle
      run: ./gradlew clean build -x test

    # 6. 첫 번째 EC2 서버로 JAR 파일 업로드 및 배포
    - name: Upload and Deploy to EC2 Instance 1
      run: |
        echo "${{ secrets.EC2_PRIVATE_KEY }}" > private_key.pem
        chmod 600 private_key.pem
        scp -i private_key.pem -o StrictHostKeyChecking=no -P 22 ./build/libs/eCommerce-0.0.1-SNAPSHOT.jar ubuntu@${{ secrets.EC2_HOST_1 }}:/home/ubuntu/

    - name: Execute commands on EC2 Instance 1
      run: |
        echo "${{ secrets.EC2_PRIVATE_KEY }}" > private_key.pem
        chmod 600 private_key.pem
        ssh -i private_key.pem -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST_1 }} << 'EOF'
          # 실행 중인 애플리케이션 종료
          if sudo lsof -i :8080; then
            echo "Stopping app running on port 8080..."
            sudo kill -9 $(sudo lsof -t -i :8080)
          fi

          # 새 애플리케이션 실행
          cd /home/ubuntu
          nohup java -jar eCommerce-0.0.1-SNAPSHOT.jar &
        EOF
      shell: bash

    # 7. 첫 번째 EC2의 애플리케이션이 실행 중인지 확인 (Health Check)
    - name: Wait for EC2 Instance 1 to become healthy
      run: |
        echo "Checking if instance 1 is healthy..."
        for i in {1..30}; do  # 최대 30번(5분)까지 확인 시도
          response=$(curl -s -o /dev/null -w "%{http_code}" ${{ secrets.EC2_1_HEALTH_CHECK_URL }})
          if [ "$response" -eq 200 ]; then
            echo "Instance 1 is healthy!"
            break
          fi
          echo "Instance 1 is not ready yet... retrying in 10 seconds."
          sleep 10
        done
      shell: bash

    # 8. 두 번째 EC2 서버로 JAR 파일 업로드 및 배포
    - name: Upload and Deploy to EC2 Instance 2
      run: |
        echo "${{ secrets.EC2_PRIVATE_KEY }}" > private_key.pem
        chmod 600 private_key.pem
        scp -i private_key.pem -o StrictHostKeyChecking=no -P 22 ./build/libs/eCommerce-0.0.1-SNAPSHOT.jar ubuntu@${{ secrets.EC2_HOST_2 }}:/home/ubuntu/

    - name: Execute commands on EC2 Instance 2
      run: |
        echo "${{ secrets.EC2_PRIVATE_KEY }}" > private_key.pem
        chmod 600 private_key.pem
        ssh -i private_key.pem -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST_2 }} << 'EOF'
          # 실행 중인 애플리케이션 종료
          if sudo lsof -i :8080; then
            echo "Stopping app running on port 8080..."
            sudo kill -9 $(sudo lsof -t -i :8080)
          fi

          # 새 애플리케이션 실행
          cd /home/ubuntu
          nohup java -jar eCommerce-0.0.1-SNAPSHOT.jar &
        EOF
      shell: bash
